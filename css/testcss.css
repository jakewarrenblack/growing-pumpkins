/*Here my CSS starts with mobile, and in my media queries I make changes based on how I'd like the desktop to look.*/

*{
  margin:0;
  padding:0;
  font-family:Arial,Helvetica,sans-serif;
  scroll-behavior: smooth;/*When the user clicks the 'return to top' button I would like the scroll back to the top
							of the page to be smooth*/
							
  box-sizing: border-box;/*This means width and height will apply to all parts of an element, including content, padding, and borders.*/
  }

/*Here I'm saying I want no margin or padding. This is because some elements have margin or padding by default, such as a h1.
  I'm also setting the font family to arial, and then helvetica and sans serif as backups.*/



/*Chat box CSS starting here*/ 

.open-button {
background-color: #fff; /*White*/
    color: 000; /*Black*/
    padding: 18px ;
    border: none;
    cursor: pointer; /*Turns the cursor into a pointer when hovered over the button*/
    opacity: 0.8;
    position: fixed; /*Position is relative to the viewport. Will always stay in the same place even when the page is scrolled.*/
    bottom: 15px; /*Move button 23px from the bottom of the viewport.*/
    width: 30%;
    border-radius: 0px 20px 20px 0px; /*Rounded edges.*/
	font-weight:bold;
	

}

.chat-popup {
  display: none; /*Means this is not displayed by default. This is changed using onclick in the html and style.display in the JavaScript.*/
 
 position: fixed; /*This keeps the popup window in the same place.*/
 
 bottom: 0; /*Bottom, right, top, and left are used to position fixed elements. In this case I use bottom to ensure the window does not move from the bottom of the viewport.*/
  
  z-index: 9; /*The z-index positions the popup window above all elements with a lower z-index.*/
  
  resize:none; /*Stops this element from being resizable for the user*/
 }


.form-container {
  max-width: 320px;
  width:100%;
  padding: 10px;
  background-color: #fff; /*White*/
  border-radius:25px 25px 0px 0px;
  resize:none; 
}


.form-container textarea {
  width: 100%;
  max-width:300px;
  padding: 15px;
  border: none;
  margin: 5px 0 22px 0;
  background: #f1f1f1;
  resize: none;
  min-height: 200px;
  border-radius:25px 25px 25px 25px;
}

.form-container .btn {
  background-color: #4CAF50; /*Light green*/
  color: #fff; /*White*/
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
  border-radius:25px 25px 25px 25px;
}


.form-container .cancel {
  background-color: #f7850a; /*Light orange*/
  border-radius:25px 25px 25px 25px;
}


.form-container .btn:hover, .open-button:hover {
  opacity: 1; /*This changes the opacity from 0.8 to 1.0 when the cursor is hovered over these elements.*/
}
  
  
  
  
/*End of chat box CSS.*/

#branding{
 background-color:#000/*Black*/;
  color:#ffffff;/*White*/
  text-align:center;
  
  
  
  /*Making my background colour black and my text white and aligned to the centre*/
}


#branding img{
		max-height:35px;
		max-width:35px;
}

.highlight{
 color:#FFA500; /*I want to make the word 'growing' orange in the title, so I use this span class*/
}

a{
  text-decoration:none;/*Removes the underline from the links*/
  color:#ffffff;/*White*/
}



.topnav{
 text-align:center;
  list-style:none;/*Removes the bulletpoints from the links*/
  background-color:#000;/*Black*/
  text-transform:uppercase; /*This will make my text uppercase*/

  
}

a:hover{
	background-color:rgb(204, 102, 0);/*Dark Orange*/ /*This makes my links turn orange when the cursor hovers over them. This is an example of a pseudo-class.*/
}

button:hover{
	color:#0000FF;/*This will cause the 'subscribe' text within my button to turn blue while the cursor is hovered over it.*/
}

p:first-letter{
	font-weight:bold;/*This makes the first letter within every paragraph bold. This is an example of a pseudo-element.*/
}

ul.topnav {
background-color: #000; /*black */
padding: 2%;}

ul.topnav li a {
display: block; /* convert inline element a to block element, so it won't show up in a horizontal line*/
}

ul.topnav li.hide{
	display:none;
} /*This will hide everything except for our menu icon*/

ul.topnav.responsive li{
	display:block;
} /*class added via jQuery*/
/*This corresponds to our javascript*/



#showcase{
  background-image:url('../images/showcase.jpg');/*This is retrieving the background image of our pumpkins*/
  background-position:center;/*This sets the starting position of our image to its centre*/
  text-align:center;
  color:#ffffff;/*White*/
  height:150px;
  padding:10px;
	
}




#newsletter{
  text-align:center;
  background-color:#000;/*Black*/
  color:#FFFFFF;/*White*/
  padding-bottom:2%;
}

.button_1{
  background:#e8491d;/*Dark orange*/
  border:0; /*This has a border by default, so I remove it*/
  padding-left:20px;
  padding-right:20px;
  color:#ffffff;/*White*/
  padding-top:2px;
  padding-bottom:2px;
  border-radius:15px; /*This gives my button rounded corners*/
 
}

input{
  height:18px;/*Increasing the height of my email address input box*/
  border-radius:15px; /*This gives my input box round corners*/
}

.box img{
 max-width:70%;/*My source images were too wide, so I only want them to go to 70% of their size*/
  margin-top:5%;
  margin-bottom:2%;
  border:2px solid #000;/*Black*/ /*This adds a solid border around my images*/
}

.box{
  text-align:center; /*Centres the text beneath my images*/
}

body{
  background-image:linear-gradient(to bottom right, #e8491d/*Dark orange*/, #FFA500 /*Orange*/);/*Adds a gradient from top left to bottom right*/
  
}



footer{
 background-color:#000;/*black*/
  color:#FFFFFF;/*white*/
  text-align:center;
  margin-top:2%;
  padding:10px;
  
}


	

/*construction pages CSS starting here*/

#construction, img{
	width:100%;
    text-align:center;
	height:50%; /*I want my construction image to cover the entire page, with text aligned to the centre*/
	
}	
	
/*contact page CSS starting here*/

/*Here I have applied a class of 'visuallyhidden' to my labels. I have added a rectangular clip of size 0x0x0x0 around them so they
don't appear on the page, but the screen reader can still interpret them. This satisfies accessibility requirements.*/


.visuallyhidden{
  position: absolute; /*Position absolute means other elements will behave as if this element has been removed completely from the webpage*/
	
  overflow: hidden; 
  clip: rect(0 0 0 0); /*This creates a rectangular clip around the labels of 0px to make them invisible*/
 
  height: 1px; width: 1px; 
  
  margin: -1px; padding: 0; border: 0; /*I don't want the labels to appear on my contact form, but I can't remove them if I want the
	form to remain accessible for screen readers*/
}

.formheader{
	padding-top:2%;
	text-align:center;
}
	
fieldset{
	border:0; 
	
	
	
}

legend{
	padding:0;
	color:#00f /*Blue*/;

}


fieldset {
	margin-top: 1.4em; /*space outside top of fieldset */
	padding: 0.6em; /*space inside fieldset*/
	
	
	max-width:90%;
	}
	
legend {
	font-size: 1.2em;
	font-weight:bold;
	color:#000000; /*Black*/
	
	}
	
input.txt {
	color:#00008B; /*blue navy*/
	background-color: #E3F2F7; /*very light blue-white*/
	border: 1px solid #00008B; /*Dark blue*/
	width:90%;
	height:40px;
	border-radius:15px; /*Gives the input round edges*/
	margin-bottom:1%;
	
	}
	
input.btn {
	color: #00008B; /*Dark blue*/
	background-color: #ADD8E6 /*very light blue-white*/;
	border: 1px solid #00008B /*Dark blue*/;
	margin-left:6%;
	height:25px;
	width:75%;
	border-radius:15px; /*Gives the input round edges*/
	
	
	}

fieldset{
	margin-left:3%;
}

.contactinfo{
	margin-top:5%;
	
	margin-left:8%;
}
	
ul.contact{
	list-style:none; /*Removes bullet points from side*/
	
}

ul.contact li{
	
	max-width:90%;
	font-size:2em;
	padding-bottom:2%;
	text-align:center;
	
	
	
}


table{
	text-align:center;
	margin-right:8%;
	
	
}

tr, td{
	border:1px solid #00008B /*Dark blue*/;
	height:40px;
	width:50%;
	
	
	}
	

.listitem{
	padding-bottom:5%;
	border:1px solid #000000 /*Black*/;
	width:90%;
	
}
	
.contact_text{
		margin-top:5%;
		margin-bottom:5%;
		text-align:center;
		
}
	


.maplink{
	color:#000000; /*Black*/
	background-color:#ffffff; /*White*/;
	width:38%;
	padding:5px;
	font-size:1.1em;
	border:1px solid #000000; /*Black*/;
	margin-top:5%;
	margin-left:30%;
	margin-bottom:2%;
	border-radius:15px; /*Gives the button round edges*/
	
	
	
	
}

.maplink img{
	
	max-width:7%;;
}


.contactelement{
	margin-bottom:15%;
	margin-top:5%;
}

.contactmore{
	margin-right:8%;
	text-align:center;

}

	
	
.pagecontain{
	margin-left:5%;
	
}

/*fix for footer issue*/

.content{
	min-height:calc(100vh - 100px); /*The content of the page, other than the footer, is contained
										within this content div. I subtract 100px from the viewport height					
										to subtract the height of the footer and the margin-bottom of the		
										element above it to keep the footer at the bottom of the page.*/
}


.content_construction{
	min-height:calc(100vh - 60px);
}





/*end of fix*/

.footer{
	height:50px;
}
	

	
/*Harvesting Page CSS*/
#harvesttext{
		text-align:center;
		margin-right:3%;
		margin-bottom:10%;
		
}
		
.cutting li{
	margin-bottom:2%;
}
	
.pagecontain{
	max-width:100%;
}

iframe{
	width:100%;
	
	
}

/*Transcript CSS*/

.transcript_text{
	
	line-height:1.5em; /*There's a lot of text here, so I've increased the line height to make it easier to read.*/
	text-align:left;
	margin-left:5%;
	margin-top:5%;
	max-width:90%; /*I don't want the text to take up too much of the screen*/
}

	
@media only screen and (min-width:1025px){/*My CSS so far was written based on how I'd like the mobile version to appear.
											 Here I use media queries to apply different styling to screens 1025px wide or above. 1025px is the
											 average width of a HD desktop monitor.*/



											 
	*{
			margin:0;
			padding:0;
	}
	

	nav li{
		padding-right:50px;
		font-size:1.4em;
	}

	#showcase{
		height:400px;
		padding:10px;
	} /*I want the showcase to be much bigger on the desktop*/
	
	.showcasetext{
		margin-top:120px;
		font-size:2.5em;
		
	}
	
	.showcasetext p{
		font-size:0.5em;
	}
	
	#boxes .box{
		clear:right; /*I use this to ensure nothing floats to the right of my images.*/
		float:left;/*This makes my three boxes appear side by side horizontally by floating them beside one another.*/
		margin-top:2%;/*Adding a margin above my boxes causes them to appear further down.*/
		width:30%;/*I set my three boxes to 30% width to allow for 5% space on either side of them*/
		margin-left:2.5%;/*I move my images slightly to the right*/
		margin-bottom:2%;
		
	}
	
	.container figcaption{
		margin-bottom:2%;
	}
	
	/*Burger menu for desktop*/
	

ul.topnav li.hide{
display:inline-block; } /*overwriting the display:none property, so we get our nav bar*/

ul.topnav.responsive li{
display:inline-block; } /* overwriting the display property that is applied via the jquery toggle() method */

ul.topnav li.icon {
	display:none;} /*Add a new selector to hide the burger menu*/

	/*Burger menu for desktop end*/
	
	
	#newsletter{
		padding:10px;
	}
	
/*Chat box media queries*/

.open-button{
	width:20%;
}
	
	
	
	
	
/*Media Queries for Contact Page*/

#form{
		float:left;
		width:20%; /*Floats this to the left so my 'contactinfo' will appear to its right.*/
}

h1.formheader{
	margin-bottom:2%;
}

input.txt{
	width:200%;
	margin-top:1.5%;
	height:60px;
}

input.btn{
	width:40%;
	margin-left:6%;
	margin-bottom:5%
}

.contactinfo{
	float:left; /*This float means my contact info appears to the right of my contact form.*/
	margin-top:3.65%;
	width:50%;


}

tr td{
	width:20%;
	height:84px;
}

tr{
	margin-bottom:3%;
	
}

.contactmore{
	float:left;
	margin-top:2.5%;
	margin-left:40%;
}

	
.contactmore{
		font-size:1.2em;

}

.contactelement{
		margin-bottom:22%;
}

.maplink{
	width:42%;
}


/*Harvesting Page Media Queries*/

#harvesttext{
	margin-top:2%;
	text-align:center;
	font-size:1.2em;
	margin-left:2%;
	margin-right:2%;
	line-height:2em;
}

table.contact{
	float:left;
	width:80%;
}

.cutting{
	margin-left:2%;
	margin-bottom:5%;
	float:left;
	width:40%;

}

.video{	
clear:right; /*This makes my videos appear in a horizontal row of three.*/
float:left;
width:20%;
margin-left:9%
	
	
}
	
	
	

iframe{
	width:120%;
	border:0px;
	
}
	

	
	
/*Transcripts*/
	
	.transcript{
		clear:both;
		margin-left:48%;
		padding:0;
		color:#000000;
	}
	footer{
		
		margin-top:10%;
		clear:both;/*I use this to move my footer section to the bottom of the page by clearing the  floats on either side of my images,
		if I didn't do this, the footer would float to the left along with the images*/
	}
	
}



  


